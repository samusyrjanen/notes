name: Preprocess
description: Read a dataset from a file, split it into a training and test dataset,
  and save the training and test dataset
inputs:
- {name: data, type: Dataset, description: Input of type Dataset which the dataset
    is read from}
outputs:
- {name: train_set, type: Dataset, description: Output of type Dataset where the training
    dataset is saved}
- {name: test_set, type: Dataset, description: 'Output of type Dataset where the test
    dataset is saved  '}
implementation:
  container:
    image: python:3.10
    command:
    - sh
    - -c
    - |2

      if ! [ -x "$(command -v pip)" ]; then
          python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip
      fi

      PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet     --no-warn-script-location 'pandas~=1.5.3' 'scikit-learn~=1.3.2' 'kfp==1.8.22' && "$0" "$@"
    - sh
    - -ec
    - |
      program_path=$(mktemp -d)
      printf "%s" "$0" > "$program_path/ephemeral_component.py"
      python3 -m kfp.v2.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"
    - "\nimport kfp\nfrom kfp.v2 import dsl\nfrom kfp.v2.dsl import *\nfrom typing\
      \ import *\n\ndef preprocess(\n    data: Input[Dataset],\n    train_set: Output[Dataset],\n\
      \    test_set: Output[Dataset],\n):\n    \"\"\"\n    Read a dataset from a file,\
      \ split it into a training and test dataset, and save the training and test\
      \ dataset\n    into separate files\n    Args:\n        data: Input of type Dataset\
      \ which the dataset is read from\n        train_set: Output of type Dataset\
      \ where the training dataset is saved\n        test_set: Output of type Dataset\
      \ where the test dataset is saved  \n    \"\"\"\n    import pandas as pd\n \
      \   from sklearn.model_selection import train_test_split\n\n    data = pd.read_csv(data.path)\n\
      \n    # Split the data into training and test sets. (0.75, 0.25) split\n   \
      \ train, test = train_test_split(data, random_state=42)\n\n    # Save the training\
      \ and test datasets into separate files\n    train.to_csv(train_set.path, index=None)\n\
      \    test.to_csv(test_set.path, index=None)\n\n"
    args:
    - --executor_input
    - {executorInput: null}
    - --function_to_execute
    - preprocess
