apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-server-conf
  labels:
    name: prometheus-server-conf
data:
  prometheus.rules: |-
    groups:
    - name: Prediction latency alert
      rules:
      - alert: High prediction latency
        expr: histogram_quantile(0.9, rate(revision_app_request_latencies_bucket{isvc_name="wine-quality"}[5m])) > 500
        for: 5s
        labels:
          severity: warning
        annotations:
          summary: High prediction latency
  prometheus.yml: |-
    # my global config
    global:
      scrape_interval:     15s # By default, scrape targets every 15 seconds.
      evaluation_interval: 15s # By default, scrape targets every 15 seconds.
      # scrape_timeout is set to the global default (10s).
    
    # Load and evaluate rules in this file every 'evaluation_interval' seconds.
    rule_files:
      # - 'alert.rules'
      # - "first.rules"
      # - "second.rules"
      - /etc/prometheus/prometheus.rules
    
    alerting:
      alertmanagers:
      - scheme: http
        static_configs:
        - targets:
          - "alertmanager.monitoring.svc:9093"
          # - "alertmanager:9093"

    # A scrape configuration containing exactly one endpoint to scrape:
    scrape_configs:
      # Pod metrics will get discovered and scraped if the pod metadata is annotated
      # with prometheus.io/scrape annotation.
      - job_name: 'kserve-inference-service-pods'
        kubernetes_sd_configs:
        - role: pod

        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_label_serving_kserve_io_inferenceservice,  __meta_kubernetes_pod_container_port_name]
          action: keep
          regex: (.+);http-usermetric
        - source_labels: [__meta_kubernetes_pod_name]
          separator: '-predictor-default-'
          regex: '(.*)-predictor-default-(.*)'
          replacement: '${1}'
          target_label: isvc_name
        
